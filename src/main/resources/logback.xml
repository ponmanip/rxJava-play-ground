<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true">
    <!--<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder" >
            <providers>
                <mdc/>
                <pattern>
                    <pattern>
                        {
                        "timestamp":"%date{ISO8601}",
                        "level":"%level",
                        "logger":"%logger",
                        "thread":"%thread",
                        "msg":"%msg"
                        }
                    </pattern>
                </pattern>
                <arguments/>
                <stackTrace/>
            </providers>
        </encoder>
    </appender>-->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <charset>UTF-8</charset>
            <Pattern>%d %-4relative [%thread] %-5level %logger{35} - %msg%n</Pattern>
        </encoder>
    </appender>

    <appender name="ERRORFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/error/ofsv2-error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>../logs/error/ofsv2-error_%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>5MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- keep 30 days' worth of history -->
            <maxHistory>15</maxHistory>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder" >
            <providers>
                <mdc/>
                <tags/>
                <pattern>
                    <pattern>
                        {
                        "timestamp":"%date{ISO8601}",
                        "level":"%level",
                        "logger":"%logger",
                        "thread":"%thread",
                        "msg":"%msg"
                        }
                    </pattern>
                </pattern>
                <arguments/>
                <stackTrace/>
            </providers>
        </encoder>

        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/info/ofsv2-info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- daily rollover. Make sure the path matches the one in the file element or else
             the rollover logs are placed in the working directory. -->
            <fileNamePattern>../logs/info/ofsv2-info_%d{yyyy-MM-dd}.%i.log</fileNamePattern>

            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>5MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- keep 30 days' worth of history -->
            <maxHistory>15</maxHistory>
        </rollingPolicy>

        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
        </filter>

        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder" >
            <providers>
                <mdc/>
                <pattern>
                    <pattern>
                        {
                        "timestamp":"%date{ISO8601}",
                        "level":"%level",
                        "logger":"%logger",
                        "thread":"%thread",
                        "msg":"%msg"
                        }
                    </pattern>
                </pattern>
                <arguments/>
                <stackTrace/>
            </providers>
        </encoder>
    </appender>


    <!-- Metrics File -->
    <appender name="METRICSFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/metrics/ofsv2-metrics.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- daily rollover. Make sure the path matches the one in the file element or else
             the rollover logs are placed in the working directory. -->
            <fileNamePattern>../logs/metrics/ofsv2-metrics_%d{yyyy-MM-dd}.%i.log</fileNamePattern>

            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>5MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- keep 30 days' worth of history -->
            <maxHistory>15</maxHistory>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder" >
            <providers>
                <mdc/>
                <pattern>
                    <pattern>
                        {
                        "timestamp":"%date{ISO8601}",
                        "level":"%level",
                        "logger":"%logger",
                        "thread":"%thread",
                        "msg":"%msg"
                        }
                    </pattern>
                </pattern>
                <arguments/>
                <stackTrace/>
            </providers>
        </encoder>
    </appender>

    <appender name="ASYNCFILE" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>500</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <appender-ref ref="FILE"/>
    </appender>

    <appender name="ASYNCSTDOUT" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>500</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <appender-ref ref="CONSOLE"/>
    </appender>

    <logger name="orderfulfilment" level="ERROR" additivity="false">
        <appender-ref ref="ERRORFILE"/>
    </logger>

    <logger name="orderfulfilment" level="DEBUG" additivity="false">
        <appender-ref ref="ASYNCSTDOUT"/>
        <appender-ref ref="ASYNCFILE"/>
    </logger>

    <logger name="metrics" level="TRACE" additivity="false">
        <appender-ref ref="METRICSFILE"/>
    </logger>

    <root level="INFO">
        <appender-ref ref="ASYNCSTDOUT"/>
        <appender-ref ref="ASYNCFILE"/>
    </root>

</configuration>

